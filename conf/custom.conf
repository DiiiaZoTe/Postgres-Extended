# custom.conf

# This file is used to configure the PostgreSQL database.
# This is needed to preload the extensions and cron jobs.

# postgresql.conf cannot extend environment variables,
# so we need to create template variable like __XX_XXX__,
# and then add the replace statement in the conf-change-env.sh
# script. These will be replaced at build time.

########################################################
# General settings
########################################################
password_encryption='scram-sha-256'

########################################################
# Extensions
########################################################

dynamic_library_path = '/usr/lib/postgresql/17/lib'
shared_preload_libraries = 'timescaledb, pg_stat_statements, pg_cron, pg_repack'

# Set the database name for pg_cron
cron.database_name = '__DB_NAME__'

########################################################
# Archive mode
########################################################

archive_mode = on
archive_command = 'pgbackrest --stanza=__BACKUP_STANZA__ --pg1-path=__PG_DATA__ archive-push %p'

########################################################
# Logging
# - All logs are in GMT timezone
# - One week of logs are kept
# - Log rotation is done every day at 00:00
# - Everything is logged to file
# Use something like pgBadger to analyze the logs
########################################################

# Enable logging to file
logging_collector = on

# log using stderr logging
# note: jsonlog is another option, but there is space/performance overhead
log_destination = 'stderr'

# directory where log files are written, can be absolute or relative to PGDATA
log_directory = 'pg_log'           

# log file name pattern, can include strftime() escapes
log_filename = 'postgresql-%A.log' 


# creation mode for log files, begin with 0 to use octal notation
log_file_mode = 0600              

# If on, an existing log file with the same name as the new log file will be
# truncated rather than appended to. But such truncation only occurs on
# time-driven rotation, not on restarts or size-driven rotation.  Default is
# off, meaning append to existing files in all cases.
log_truncate_on_rotation = on      

# Automatic rotation of logfiles will happen after that time.  0 disables.
# 1 day (1440 minutes), it rotates every day and our log file is named postgresql-%a.log
# so we will keep 1 week of logs
log_rotation_age = 1440

# Automatic rotation of logfiles will happen after that much log output.
# 0 disables
log_rotation_size = 0              

# Log all statements
# use 'all' to log all statements (enormous amount of logs)
# use 'mod' to log most statements = DDL, DML (no select)
log_statement = 'mod'

# Log all queries that take more than 2 seconds,
# this way it doesn't log everything, only the slow statements
log_min_duration_statement = 2000



# Log line prefix for log files
log_line_prefix = '%t [%p]: db=%d,user=%u,app=%a,client=%h '

# Log checkpoints
log_checkpoints = on

# Log connections
log_connections = on

# Log disconnections
log_disconnections = on

# Log lock waits
log_lock_waits = on

# Log temp files
log_temp_files = 0

# Log autovacuum min duration
log_autovacuum_min_duration = 0

# Log error verbosity
log_error_verbosity = default